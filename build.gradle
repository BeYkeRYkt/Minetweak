apply plugin: 'java'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

def version = '0.5'
def groupId = 'org.minetweak'
repositories {
    mavenCentral()

    maven {
        url 'https://repository.apache.org/content/repositories/releases/'
    }
}

configurations {
    deployerJars
}

dependencies {
    compile 'com.google.guava:guava:14.0.1'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-lang3:3.1'
    testCompile 'junit:junit:4.10'
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"
    compile files('libs/bcprov-jdk15on-1.47.jar')
}

javadoc {
    title 'Minetweak'
}

compileJava {
    options.compilerArgs = ['-Xlint:none']
    sourceCompatibility = '1.6' 
    targetCompatibility = '1.6'
}

jar {
    manifest {
        attributes('Main-class': 'org.minetweak.Minetweak')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}

tasks.withType(Test) {
    scanForTestClasses = false
    include '**/*Test*.class'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives jar
}

if (!hasProperty('ciUsername')) {
    ext.ciUsername = ''
}
if (!hasProperty('ciPassword')) {
    ext.ciPassword = ''
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: 'ftp://ci.directmyfile.com/var/www/snapshots/') {
            authentication(userName: ciUsername, password: ciPassword)
        }
        pom.groupId = groupId
        pom.version = version
    }
}

task standaloneJar(type: Jar) {
    description = 'Makes a JAR with Minetweak dependencies inside'
    classifier = 'standalone'
    from sourceSets.main.output
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes('Main-class': 'org.minetweak.Minetweak')
    }
}

task apiJar(type: Jar) {
    description = 'Makes a JAR containing only the Minetweak API'
    classifier = 'api'
    from sourceSets.main.output
    include("org/minetweak/*")
}
