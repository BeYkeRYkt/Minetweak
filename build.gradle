apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'project-report'
apply plugin: 'build-dashboard'

def tweakVersion = '0.6.5-SNAPSHOT'
def mainClass = 'org.minetweak.Start'

defaultTasks 'jar'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    compile
    deployerJars
}

dependencies {
    compile 'com.google.guava:guava:14.0.1'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.codehaus.groovy:groovy-all:2.1.6'
    compile 'org.bouncycastle:bcprov-jdk15on:1.47'
    testCompile 'junit:junit:4.11'
    deployerJars 'org.apache.maven.wagon:wagon-ftp:2.2'
}

javadoc {
    title 'Minetweak v' + version
    exclude '**/net/minecraft/**'
    classpath = configurations.compile + sourceSets.main.output
}

compileJava {
    options.compilerArgs = ['-Xlint:none']
    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'
}

jar {
    manifest {
        attributes('Main-class': mainClass, 'Minetweak-version': tweakVersion)
    }
}

tasks.withType(Test) {
    scanForTestClasses = false
    include '**/*Test*.class'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    group = 'other'
    description = 'Makes a JAR with Minetweak Sources'
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    group = 'documentation'
    description = 'Makes a JAR with Minetweak Javadoc'
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task standaloneJar(type: Jar) {
    group = 'build'
    description = 'Makes a JAR with Minetweak dependencies inside'
    classifier = 'standalone'
    from sourceSets.main.output
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    exclude 'META-INF', 'META-INF/**/*'

    manifest {
        attributes('Main-class': mainClass, 'Minetweak-version': tweakVersion)
    }
}

task apiJar(type: Jar) {
    group = 'build'
    description = 'Makes a JAR containing only the Minetweak API'
    classifier = 'api'
    from sourceSets.main.output
    include('org/minetweak/**/*')
    include('org/bukkit/**/*')
}

artifacts {
    archives jar
    archives standaloneJar
    archives apiJar
    archives sourcesJar
    archives javadocJar
}

//signing { sign configurations.archives }

if (!hasProperty('sonatypeUsername')) {def sonatypeUsername = ''}
if (!hasProperty('sonatypePassword')) {def sonatypePassword = ''}

uploadArchives {
    repositories.mavenDeployer {
        //beforeDeployment { deployment ->
        //    signing.signPom(deployment)
        //}
        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom {
            groupId = 'org.minetweak'
            version = tweakVersion
            artifactId = project.name
            project {
                name project.name
                packaging 'jar'
                description 'Minetweak API Implementation'
                inceptionYear '2013'
                url 'http://www.minetweak.org/'

                scm {
                    url 'https://github.com/Minetweak/Minetweak/'
                    connection 'scm:git:git://github.com/Minetweak/Minetweak.git'
                    developerConnection 'scm:git:git@github.com:Minetweak/Minetweak.git'
                }

                issueManagement {
                    system 'jira'
                    url 'https://minetweak.atlassian.net/'
                }

                licenses {
                    license {
                        name 'GNU Lesser General Public License (LGPL), Version 3'
                        url 'http://www.gnu.org/licenses/lgpl.txt'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = false
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.7-rc-2'
}